from flask import Flask, request, jsonify
import firebase_admin
from firebase_admin import credentials, db
import os
import json

app = Flask(__name__)

# üîπ Configura√ß√£o do Firebase (usando vari√°vel de ambiente do Render)
firebase_key_json = os.environ.get("FIREBASE_KEY")

if firebase_key_json:
    cred_dict = json.loads(firebase_key_json)  # Converte JSON para dicion√°rio
    cred = credentials.Certificate(cred_dict)
    firebase_admin.initialize_app(cred, {
        "databaseURL": "https://adsdados-default-rtdb.firebaseio.com/"
    })
else:
    print("‚ùå ERRO: Vari√°vel FIREBASE_KEY n√£o encontrada.")
    exit(1)

# üîπ Fun√ß√£o para carregar os an√∫ncios do Firebase
def load_ads():
    ref = db.reference("ads")
    ads = ref.get()
    return list(ads.values()) if ads else []  # Retorna lista vazia se n√£o houver an√∫ncios

# üîπ Rota para testar se a API est√° rodando
@app.route("/", methods=["GET"])
def home():
    return jsonify({"message": "API est√° rodando!"}), 200

# üîπ Rota para buscar todos os an√∫ncios
@app.route("/ads", methods=["GET"])
def get_ads():
    ads = load_ads()
    return jsonify(ads), 200

# üîπ Rota para adicionar um novo an√∫ncio
@app.route("/ads", methods=["POST"])
def add_ad():
    try:
        data = request.get_json()
        if not data:
            return jsonify({"error": "Dados inv√°lidos"}), 400

        image = data.get("image")
        link = data.get("link")
        description = data.get("description")

        if not image or not link or not description:
            return jsonify({"error": "Todos os campos s√£o obrigat√≥rios"}), 400

        ref = db.reference("ads")
        new_ad_ref = ref.push({
            "image": image,
            "link": link,
            "description": description
        })

        return jsonify({"message": "An√∫ncio salvo com sucesso!", "id": new_ad_ref.key}), 201

    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000, debug=True)
